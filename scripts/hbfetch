#!/usr/bin/env bash

# Speed up script by not using unicode
SYS_LOCALE="$LANG"
export LC_ALL=C
export LANG=C

usuario() {
    	usuario="${USER:-$(whoami)}"
}

host() {
	host="${HOSTNAME:-$(hostname)}"
}

distro() {
    	. /etc/os-release
    	distro="${PRETTY_NAME:-Linux}"
}

kernel() {
    	read -r _ _ kernel _ < /proc/version
}

shell() {
    	shell="${SHELL##*/}"
}

pkg() {
	pkg="$(dpkg --list | wc --lines)"
}

uptime() {
    	s=$(< /proc/uptime)
    	s=${s/.*}

    	((d=s/60/60/24, h=s/60/60%24, m=s/60%60))

    	((d)) && uptime+="${d}d "
    	((h)) && uptime+="${h}h "
    	((m)) && uptime+="${m}m "
}

memory() {
    	while IFS=: read -r a b; do
        b=${b/kB}

        case $a in
            MemTotal)((mem_used+=b,mem_total=b)) ;;
            Shmem)((mem_used+=b)) ;;
            MemFree|Buffers|Cached|SReclaimable) ((mem_used-=b)) ;;
        esac
    	done </proc/meminfo

    	((mem_used/=1024,mem_total/=1024))
    	memory="${mem_used}M/${mem_total}M"
}

model() {
    model="$(< /sys/devices/virtual/dmi/id/product_version) "
    model+="$(< /sys/devices/virtual/dmi/id/product_name)"
    model="${model//*O.E.M*}"
}

wm() {

[ "$DISPLAY" ] && displayprot="x11"
  [ "$WAYLAND_DISPLAY" ] && displayprot="wayland"
  # fallback to tty if none is detected
  [ ! "$displayprot" ] && displayprot="tty"
  # get gtk theme
  while read -r line; do
    case $line in
    gtk-theme*) theme=${line##*=} ;;
    gtk-icon-theme*) icons=${line##*=} ;;
    esac
  done <"${XDG_CONFIG_HOME:-$HOME/.config}/gtk-3.0/settings.ini"
  # WMs/DEs
  # usually set by GUI display managers and DEs
  wm="$XDG_CURRENT_DESKTOP"
  [ "$wm" ] || wm="$DESKTOP_SESSION"

  # for most WMs
  [ ! "$wm" ] && [ "$DISPLAY" ] && command -v xprop >/dev/null && {
    id=$(xprop -root -notype _NET_SUPPORTING_WM_CHECK)
    id=${id##* }
    wm=$(xprop -id "$id" -notype -len 100 -f _NET_WM_NAME 8t |
      grep '^_NET_WM_NAME' | cut -d\" -f 2)
  }

  # for non-EWMH WMs
  [ ! "$wm" ] || [ "$wm" = "LG3D" ] &&
    wm=$(
      ps -e | grep -m 1 -o \
        -e "sway" \
        -e "kiwmi" \
        -e "wayfire" \
        -e "sowm" \
        -e "catwm" \
        -e "fvwm" \
        -e "dwm" \
        -e "2bwm" \
        -e "monsterwm" \
        -e "tinywm" \
        -e "xmonad"
    )
}

{
distro
shell
model
uptime
memory
kernel
pkgs
usuario
host
wm
pkg
} 2>/dev/null

## COLORES

c0='[0m'
c1='[31m'; c2='[32m'
c3='[33m'; c4='[34m'
c5='[35m'; c6='[36m'
c7='[37m'; c8='[38m'
c9='^[[40m'; 

paleta="[7m$c5 $c5 $c1 $c1 $c3 $c3 $c2 $c2 $c6 $c6 $c4 $c4 [m"

## CONEJO

ART1="${c3}    \  /      "
ART2="${c3}  _ /''${c0}.-.    "
ART3="${c3}    \_${c0}(   ).  "
ART4="${c3}    /${c0}(___(__) " 
ART5="${c0}                   "
ART6="${c0} "
ART7="${c0} "
ART8="${c0} "
ART9="${c0}  "
ART10="${c0}â €"
ART11="${c0}              "
## CONEJO=FETCH
 
cat <<-EOF
 
 ${ART11} ${c5}     OS ï‘„${c0} ${distro}
 ${ART1} ${c5} Kernel ï‘„${c0} ${kernel}
 ${ART2} ${c5}     WM ï‘„${c0} ${wm}
 ${ART3} ${c5}    Pkg ï‘„${c0} ${pkg}
 ${ART4} ${c5}  Shell ï‘„${c0} ${shell}
 ${ART11} ${c5} Uptime ï‘„${c0} ${uptime}
 ${ART11} ${c5} Memory ï‘„${c0} ${memory}

                   ${paleta}
EOF
